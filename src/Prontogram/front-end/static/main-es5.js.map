{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/_components/alert.component.ts","webpack:///src/app/_components/alert.component.html","webpack:///src/app/_components/index.ts","webpack:///src/app/_helpers/auth.guard.ts","webpack:///src/app/_helpers/error.interceptor.ts","webpack:///src/app/_helpers/fake-backend.ts","webpack:///src/app/_helpers/index.ts","webpack:///src/app/_helpers/jwt.interceptor.ts","webpack:///src/app/_models/airport.ts","webpack:///src/app/_models/alert.ts","webpack:///src/app/_models/flight.ts","webpack:///src/app/_models/index.ts","webpack:///src/app/_models/notification.ts","webpack:///src/app/_models/subscription.ts","webpack:///src/app/_models/user.ts","webpack:///src/app/_services/account.service.ts","webpack:///src/app/_services/alert.service.ts","webpack:///src/app/_services/index.ts","webpack:///src/app/_services/notification.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/home/index.ts","webpack:///src/app/notification/index.ts","webpack:///src/app/notification/notification.component.ts","webpack:///src/app/notification/notification.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AlertComponent","router","alertService","fade","alerts","alertSubscription","onAlert","subscribe","alert","message","filter","x","keepAfterRouteChange","forEach","push","autoClose","setTimeout","removeAlert","routeSubscription","events","event","clear","unsubscribe","includes","classes","alertTypeClass","Success","Info","Warning","type","join","selector","templateUrl","AuthGuard","accountService","route","state","user","userValue","navigate","queryParams","returnUrl","url","providedIn","ErrorInterceptor","request","next","handle","pipe","err","status","logout","error","statusText","console","usersKey","users","JSON","parse","localStorage","getItem","FakeBackendInterceptor","method","headers","body","handleRoute","endsWith","authenticate","register","getUsers","match","getUserById","updateUser","deleteUser","username","password","find","ok","basicDetails","token","length","Math","max","map","setItem","stringify","isLoggedIn","unauthorized","idFromUrl","params","Object","assign","nome","cognome","get","urlParts","split","parseInt","fakeBackendProvider","provide","useClass","multi","JwtInterceptor","isApiUrl","startsWith","apiUrl","clone","setHeaders","Authorization","Airport","Alert","init","AlertType","Flight","Notification","Subscription","User","AccountService","http","userSubject","asObservable","value","header","post","set","getheader","put","_id","AlertService","subject","defaultId","options","NotificationService","notificationSubject","notification","subscription","sub","log","toJSON","accountModule","AccountModule","usersModule","UsersModule","routes","path","component","canActivate","loadChildren","redirectTo","AppRoutingModule","forRoot","imports","AppComponent","notificationService","swUpdate","swPush","VAPID_PUBLIC_KEY","pushSubscription","isEnabled","available","confirm","window","location","reload","requestSubscription","serverPublicKey","sendSubscriptionToTheServer","unsubscribeNotifications","subscriptionValue","unsubscribeToNotification","res","success","AppModule","enabled","production","declarations","providers","bootstrap","HomeComponent","NotificationComponent","ngUnsubscribe","navigator","serviceWorker","controller","onstatechange","registration","oncontrollerchange","getAllNotifications","messages","notify","flyBack","flyOutBound","offerToken","updateNotificationView","notificationClicks","action","notifications","getAll","complete","environment","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\r\nimport { Router, NavigationStart } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { Alert, AlertType } from '../_models';\r\nimport { AlertService } from '../_services';\r\n\r\n@Component({ selector: 'alert', templateUrl: 'alert.component.html' })\r\nexport class AlertComponent implements OnInit, OnDestroy {\r\n    @Input() id = 'default-alert';\r\n    @Input() fade = true;\r\n\r\n    alerts: Alert[] = [];\r\n    alertSubscription: Subscription;\r\n    routeSubscription: Subscription;\r\n\r\n    constructor(private router: Router, private alertService: AlertService) { }\r\n\r\n    ngOnInit() {\r\n        // subscribe to new alert notifications\r\n        this.alertSubscription = this.alertService.onAlert(this.id)\r\n            .subscribe(alert => {\r\n                // clear alerts when an empty alert is received\r\n                if (!alert.message) {\r\n                    // filter out alerts without 'keepAfterRouteChange' flag\r\n                    this.alerts = this.alerts.filter(x => x.keepAfterRouteChange);\r\n\r\n                    // remove 'keepAfterRouteChange' flag on the rest\r\n                    this.alerts.forEach(x => delete x.keepAfterRouteChange);\r\n                    return;\r\n                }\r\n\r\n                // add alert to array\r\n                this.alerts.push(alert);\r\n\r\n                // auto close alert if required\r\n                if (alert.autoClose) {\r\n                    setTimeout(() => this.removeAlert(alert), 3000);\r\n                }\r\n           });\r\n\r\n        // clear alerts on location change\r\n        this.routeSubscription = this.router.events.subscribe(event => {\r\n            if (event instanceof NavigationStart) {\r\n                this.alertService.clear(this.id);\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        // unsubscribe to avoid memory leaks\r\n        this.alertSubscription.unsubscribe();\r\n        this.routeSubscription.unsubscribe();\r\n    }\r\n\r\n    removeAlert(alert: Alert) {\r\n        // check if already removed to prevent error on auto close\r\n        if (!this.alerts.includes(alert)) return;\r\n\r\n        if (this.fade) {\r\n            // fade out alert\r\n            alert.fade = true;\r\n\r\n            // remove alert after faded out\r\n            setTimeout(() => {\r\n                this.alerts = this.alerts.filter(x => x !== alert);\r\n            }, 250);\r\n        } else {\r\n            // remove alert\r\n            this.alerts = this.alerts.filter(x => x !== alert);\r\n        }\r\n    }\r\n\r\n    cssClass(alert: Alert) {\r\n        if (!alert) return;\r\n\r\n        const classes = ['alert', 'alert-dismissable', 'mt-4', 'container'];\r\n                \r\n        const alertTypeClass = {\r\n            [AlertType.Success]: 'alert alert-success',\r\n            [AlertType.Error]: 'alert alert-danger',\r\n            [AlertType.Info]: 'alert alert-info',\r\n            [AlertType.Warning]: 'alert alert-warning'\r\n        }\r\n\r\n        classes.push(alertTypeClass[alert.type]);\r\n\r\n        if (alert.fade) {\r\n            classes.push('fade');\r\n        }\r\n\r\n        return classes.join(' ');\r\n    }\r\n}","<div *ngFor=\"let alert of alerts\" class=\"{{cssClass(alert)}}\">\r\n    <a class=\"close\" (click)=\"removeAlert(alert)\">&times;</a>\r\n    <span [innerHTML]=\"alert.message\"></span>\r\n</div>","export * from './alert.component';\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\nimport { AccountService } from '../_services';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(\r\n        private router: Router,\r\n        private accountService: AccountService\r\n    ) {}\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        const user = this.accountService.userValue;\r\n        if (user) {\r\n            // authorised so return true\r\n            return true;\r\n        }\r\n\r\n        // not logged in so redirect to login page with the return url\r\n        this.router.navigate(['/account/login'], { queryParams: { returnUrl: state.url }});\r\n        return false;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { AccountService } from '../_services';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    constructor(private accountService: AccountService) {}\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n            if ([401, 403].includes(err.status) && this.accountService.userValue) {\r\n                // auto logout if 401 or 403 response returned from api\r\n                this.accountService.logout();\r\n            }\r\n\r\n            const error = err.error?.message || err.statusText;\r\n            console.error(err);\r\n            return throwError(error);\r\n        }))\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpResponse, HttpHandler, HttpEvent, HttpInterceptor, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { delay, materialize, dematerialize } from 'rxjs/operators';\r\n\r\n// array in local storage for registered users\r\nconst usersKey = 'Prontogram';\r\nlet users = JSON.parse(localStorage.getItem(usersKey)) || [];\r\n\r\n@Injectable()\r\nexport class FakeBackendInterceptor implements HttpInterceptor {\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        const { url, method, headers, body } = request;\r\n\r\n        return handleRoute();\r\n\r\n        function handleRoute() {\r\n            switch (true) {\r\n                case url.endsWith('/users/authenticate') && method === 'POST':\r\n                    return authenticate();\r\n                case url.endsWith('/users/register') && method === 'POST':\r\n                    return register();\r\n                case url.endsWith('/users') && method === 'GET':\r\n                    return getUsers();\r\n                case url.match(/\\/users\\/\\d+$/) && method === 'GET':\r\n                    return getUserById();\r\n                case url.match(/\\/users\\/\\d+$/) && method === 'PUT':\r\n                    return updateUser();\r\n                case url.match(/\\/users\\/\\d+$/) && method === 'DELETE':\r\n                    return deleteUser();\r\n                default:\r\n                    // pass through any requests not handled above\r\n                    return next.handle(request);\r\n            }    \r\n        }\r\n\r\n        // route functions\r\n\r\n        function authenticate() {\r\n            const { username, password } = body;\r\n            const user = users.find(x => x.username === username && x.password === password);\r\n            if (!user) return error('Username or password is incorrect');\r\n            return ok({\r\n                ...basicDetails(user),\r\n                token: 'fake-jwt-token'\r\n            })\r\n        }\r\n\r\n        function register() {\r\n            const user = body\r\n\r\n            if (users.find(x => x.username === user.username)) {\r\n                return error('Username \"' + user.username + '\" is already taken')\r\n            }\r\n\r\n            user.id = users.length ? Math.max(...users.map(x => x.id)) + 1 : 1;\r\n            users.push(user);\r\n            localStorage.setItem(usersKey, JSON.stringify(users));\r\n            return ok();\r\n        }\r\n\r\n        function getUsers() {\r\n            if (!isLoggedIn()) return unauthorized();\r\n            return ok(users.map(x => basicDetails(x)));\r\n        }\r\n\r\n        function getUserById() {\r\n            if (!isLoggedIn()) return unauthorized();\r\n\r\n            const user = users.find(x => x.id === idFromUrl());\r\n            return ok(basicDetails(user));\r\n        }\r\n\r\n        function updateUser() {\r\n            if (!isLoggedIn()) return unauthorized();\r\n\r\n            let params = body;\r\n            let user = users.find(x => x.id === idFromUrl());\r\n\r\n            // only update password if entered\r\n            if (!params.password) {\r\n                delete params.password;\r\n            }\r\n\r\n            // update and save user\r\n            Object.assign(user, params);\r\n            localStorage.setItem(usersKey, JSON.stringify(users));\r\n\r\n            return ok();\r\n        }\r\n\r\n        function deleteUser() {\r\n            if (!isLoggedIn()) return unauthorized();\r\n\r\n            users = users.filter(x => x.id !== idFromUrl());\r\n            localStorage.setItem(usersKey, JSON.stringify(users));\r\n            return ok();\r\n        }\r\n\r\n        // helper functions\r\n\r\n        function ok(body?) {\r\n            return of(new HttpResponse({ status: 200, body }))\r\n                .pipe(delay(500)); // delay observable to simulate server api call\r\n        }\r\n\r\n        function error(message) {\r\n            return throwError({ error: { message } })\r\n                .pipe(materialize(), delay(500), dematerialize()); // call materialize and dematerialize to ensure delay even if an error is thrown;\r\n        }\r\n\r\n        function unauthorized() {\r\n            return throwError({ status: 401, error: { message: 'Unauthorized' } })\r\n                .pipe(materialize(), delay(500), dematerialize());\r\n        }\r\n\r\n        function basicDetails(user) {\r\n            const { id, username, nome, cognome } = user;\r\n            return { id, username, nome, cognome };\r\n        }\r\n\r\n        function isLoggedIn() {\r\n            return headers.get('Authorization') === 'Bearer fake-jwt-token';\r\n        }\r\n\r\n        function idFromUrl() {\r\n            const urlParts = url.split('/');\r\n            return parseInt(urlParts[urlParts.length - 1]);\r\n        }\r\n    }\r\n}\r\n\r\nexport const fakeBackendProvider = {\r\n    // use fake backend in place of Http service for backend-less development\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: FakeBackendInterceptor,\r\n    multi: true\r\n};","export * from './auth.guard';\r\nexport * from './error.interceptor';\r\nexport * from './jwt.interceptor';\r\nexport * from './fake-backend';","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { environment } from '../../environments/environment';\r\nimport { AccountService } from '../_services';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n    constructor(private accountService: AccountService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // add auth header with jwt if user is logged in and request is to the api url\r\n        const user = this.accountService.userValue;\r\n        const isLoggedIn = user && user.token;\r\n        const isApiUrl = request.url.startsWith(environment.apiUrl);\r\n        if (isLoggedIn && isApiUrl) {\r\n            request = request.clone({\r\n                setHeaders: {\r\n                    Authorization: `Bearer ${user.token}`\r\n                }\r\n            });\r\n        }\r\n\r\n        return next.handle(request);\r\n    }\r\n}","export class Airport {\r\n    code: string\r\n    name: string;\r\n    cityName: string;\r\n    countryCode: string;\r\n}","export class Alert {\r\n    id: string;\r\n    type: AlertType;\r\n    message: string;\r\n    autoClose: boolean;\r\n    keepAfterRouteChange: boolean;\r\n    fade: boolean;\r\n\r\n    constructor(init?:Partial<Alert>) {\r\n        Object.assign(this, init);\r\n    }\r\n}\r\n\r\nexport enum AlertType {\r\n    Success,\r\n    Error,\r\n    Info,\r\n    Warning\r\n}","import { Airport } from \"./airport\";\r\n\r\nexport class Flight {\r\n    flightCode: string;\r\n    departure_airport: Airport;\r\n    arrival_airport: Airport;\r\n    AirlineName: string;\r\n    departureDateTime: Date;\r\n    arrivalDateTime: Date;\r\n    price: number;\r\n}","export * from './alert';\r\nexport * from './user';\r\nexport * from './notification';\r\nexport * from './subscription';\r\nexport * from './flight';\r\nexport * from './airport';\r\n","import { Flight } from \"./flight\";\r\n\r\nexport class Notification {\r\n    _id: string;\r\n    flyBack: Flight;\r\n    flyOutBound: Flight;\r\n    offerToken: string;\r\n    username: string;\r\n}\r\n","export class Subscription {\r\n    subscription: any;\r\n    username: string;\r\n}","export class User {\r\n    _id: string;\r\n    name: string;\r\n    password: string;\r\n    secondName: string;\r\n    username: string;\r\n    token:string\r\n}","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { environment } from '../../environments/environment';\r\nimport { User } from '../_models';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AccountService {\r\n    private userSubject: BehaviorSubject<User>;\r\n    public user: Observable<User>;\r\n    private header: HttpHeaders \r\n\r\n    constructor(\r\n        private router: Router,\r\n        private http: HttpClient,\r\n        \r\n    ) {\r\n        this.userSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('user')));\r\n        this.user = this.userSubject.asObservable();\r\n       \r\n    }\r\n\r\n    public get userValue(): User {\r\n        return this.userSubject.value;\r\n    }\r\n\r\n    isLoggedIn() {\r\n        return this.header.get('auth-token') === this.userValue.token;\r\n    }\r\n\r\n    login(username, password) {\r\n        return this.http.post<User>(`${environment.apiUrl}/auth/login`, { username, password })\r\n        .pipe(map(user => {\r\n            this.userSubject.next(user);\r\n            this.header = new HttpHeaders().set(\r\n                \"auth-token\",\r\n                this.userSubject.value.token\r\n              );\r\n            // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n            localStorage.setItem('user', JSON.stringify(user));\r\n            return user;\r\n        }));\r\n    }\r\n\r\n    logout() {\r\n        this.userSubject.next(null);\r\n        this.router.navigate(['/account/login']);\r\n    }\r\n\r\n    register(user: User) {\r\n        return this.http.post(`${environment.apiUrl}/auth/register`, user);\r\n    }\r\n\r\n    createUser(user: User) {\r\n        return this.http.post(`${environment.apiUrl}/user/new`, user, {headers: this.getheader ()});\r\n    }\r\n\r\n    getAll() {\r\n        return this.http.get<User[]>(`${environment.apiUrl}/user/all`, {headers: this.getheader ()}); \r\n    }\r\n\r\n    getById(id: string) {\r\n        return  this.http.get<User>(`${environment.apiUrl}/user/${id}`, {headers: this.getheader ()});\r\n    }\r\n\r\n    update(id, params) {\r\n        return this.http.put(`${environment.apiUrl}/user/${id}`, params, {headers: this.getheader ()})\r\n            .pipe(map(x => {\r\n                // update stored user if the logged in user updated their own record\r\n                if (id == this.userValue._id) {\r\n                    // update local storage\r\n                    const user = { ...this.userValue, ...params };\r\n                    localStorage.setItem('user', JSON.stringify(user));\r\n\r\n                    // publish updated user to subscribers\r\n                    this.userSubject.next(user);\r\n                }\r\n                return x; \r\n            }));\r\n    }\r\n\r\n    delete(id: string) {\r\n        return this.http.delete(`${environment.apiUrl}/user/${id}`, {headers: this.getheader ()})\r\n            .pipe(map(x => {\r\n                // auto logout if the logged in user deleted their own record\r\n                if (id == this.userValue._id) {\r\n                    this.logout();\r\n                }\r\n                return x;\r\n            }));\r\n    }\r\n\r\n    getheader (): HttpHeaders {\r\n       return this.header = new HttpHeaders().set(\r\n            \"auth-token\",\r\n            this.userSubject.value.token\r\n          );\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\nimport { Alert, AlertType } from '../_models';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AlertService {\r\n    private subject = new Subject<Alert>();\r\n    private defaultId = 'default-alert';\r\n\r\n    // enable subscribing to alerts observable\r\n    onAlert(id = this.defaultId): Observable<Alert> {\r\n        return this.subject.asObservable().pipe(filter(x => x && x.id === id));\r\n    }\r\n\r\n    // convenience methods\r\n    success(message: string, options?: any) {\r\n        this.alert(new Alert({ ...options, type: AlertType.Success, message }));\r\n    }\r\n\r\n    error(message: string, options?: any) {\r\n        this.alert(new Alert({ ...options, type: AlertType.Error, message }));\r\n    }\r\n\r\n    info(message: string, options?: any) {\r\n        this.alert(new Alert({ ...options, type: AlertType.Info, message }));\r\n    }\r\n\r\n    warn(message: string, options?: any) {\r\n        this.alert(new Alert({ ...options, type: AlertType.Warning, message }));\r\n    }\r\n\r\n    // main alert method    \r\n    alert(alert: Alert) {\r\n        alert.id = alert.id || this.defaultId;\r\n        this.subject.next(alert);\r\n    }\r\n\r\n    // clear alerts\r\n    clear(id = this.defaultId) {\r\n        this.subject.next(new Alert({ id }));\r\n    }\r\n}","export * from './account.service';\r\nexport * from './notification.service';\r\nexport * from './alert.service';\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../environments/environment';\r\nimport { Notification, Subscription, User } from '../_models';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class NotificationService {\r\n    private notificationSubject: BehaviorSubject<Notification>;\r\n    public notification: Observable<Notification>;\r\n    constructor(\r\n        private http: HttpClient,\r\n        \r\n    ) {\r\n        this.notificationSubject = new BehaviorSubject<Notification>(JSON.parse(localStorage.getItem('notification')));\r\n        this.notification = this.notificationSubject.asObservable();\r\n    }\r\n\r\n    public get notificationValue(): Notification {\r\n        return this.notificationSubject.value;\r\n    }\r\n\r\n    createNotification(notification: Notification) {\r\n        return this.http.post(`${environment.apiUrl}/notification/new`, notification);\r\n    }\r\n\r\n    getAll(username: string) {\r\n        return this.http.get<Notification[]>(`${environment.apiUrl}/notification/all/${username}`); \r\n    }\r\n\r\n    getById(id: string) {\r\n        return  this.http.get<Notification>(`${environment.apiUrl}/notification/findOne/${id}`);\r\n    }\r\n\r\n    update(id, params) {\r\n        return this.http.put(`${environment.apiUrl}/notification/${id}`, params);\r\n    }\r\n\r\n    delete(id: string) {\r\n        return this.http.delete(`${environment.apiUrl}/notification/${id}`)\r\n            .pipe(map(x => {\r\n                return x;\r\n            }));\r\n    }\r\n\r\n    sendSubscriptionToTheServer (subscription: PushSubscription, user: User) {\r\n        const sub = new Subscription ();\r\n        sub.subscription = subscription;\r\n        sub.username = user.username;\r\n        console.log (sub);\r\n        return  this.http.post(`${environment.apiUrl}/subscription/new`,sub);\r\n    }\r\n\r\n    unsubscribeToNotification (subscription: PushSubscription) {\r\n        return  this.http.delete(`${environment.apiUrl}/subscription/${subscription.toJSON()}`);\r\n    }\r\n\r\n    send() {\r\n        return this.http.post(`${environment.apiUrl}/notification/news`,null);\r\n    }\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { HomeComponent } from './home';\r\nimport { NotificationComponent } from './notification';\r\nimport { AuthGuard } from './_helpers';\r\n\r\nconst accountModule = () => import('./account/account.module').then(x => x.AccountModule);\r\nconst usersModule = () => import('./users/users.module').then(x => x.UsersModule);\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: HomeComponent, canActivate: [AuthGuard] },\r\n    { path: 'users', loadChildren: usersModule, canActivate: [AuthGuard] },\r\n    { path: 'account', loadChildren: accountModule },\r\n    { path: 'notification', component: NotificationComponent, canActivate: [AuthGuard] },\r\n\r\n    // otherwise redirect to home\r\n    { path: '**', redirectTo: '' }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }","import { Component, OnInit } from '@angular/core';\r\nimport { AccountService, NotificationService } from './_services';\r\nimport { User, Notification } from './_models';\r\nimport { SwPush, SwUpdate } from '@angular/service-worker';\r\nimport { take } from 'rxjs/operators';\r\n@Component({ selector: 'app', templateUrl: 'app.component.html' })\r\nexport class AppComponent implements OnInit {\r\n\r\n    user: User;\r\n    notification: Notification;\r\n    readonly VAPID_PUBLIC_KEY = \"BA161ZnkX9G6CwYOZifUyGpOxslxcANly0PfMtti7y1rDO9NZlPNI1yepdaTodQXX0gVHqXHVApmArL1MUNsBoM\";\r\n\r\n    constructor(\r\n        private accountService: AccountService, \r\n        private notificationService: NotificationService,\r\n        private swUpdate: SwUpdate,\r\n        private swPush: SwPush,\r\n        ) {\r\n        this.accountService.user.subscribe(x => this.user = x);\r\n        this.notificationService.notification.subscribe(x => this.notification = x);\r\n        this.pushSubscription();\r\n        }\r\n\r\n    ngOnInit () {\r\n\r\n        if (this.swUpdate.isEnabled) {\r\n\r\n            this.swUpdate.available.subscribe(() => {\r\n\r\n                if (confirm(\"New version available. Load New Version?\")) {\r\n                    window.location.reload();\r\n                }\r\n\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    pushSubscription () {\r\n        if(this.swPush.isEnabled){\r\n        this.swPush.requestSubscription({\r\n        serverPublicKey: this.VAPID_PUBLIC_KEY\r\n        })\r\n        .then(sub =>{this.notificationService.sendSubscriptionToTheServer(sub,this.user).subscribe(x=>console.log(x),err=>console.log(err))})\r\n        .catch(err => console.error(\"Could not subscribe to notifications\", err));\r\n        }\r\n    }\r\n\r\n    logout() {\r\n        this.accountService.logout();\r\n        this.unsubscribeNotifications();\r\n    }\r\n\r\n    unsubscribeNotifications(){\r\n        this.swPush.subscription.pipe(take(1)).subscribe(subscriptionValue=>{\r\n          if (subscriptionValue) {\r\n              this.notificationService.unsubscribeToNotification (subscriptionValue)\r\n              .subscribe(\r\n                res => {\r\n                  // Unsubscribe current client (browser)\r\n                  subscriptionValue.unsubscribe()\r\n                    .then(success => {\r\n                      console.log('[App] Unsubscription successful', success)\r\n                    })\r\n                    .catch(err => {\r\n                      console.log('[App] Unsubscription failed', err)\r\n                    })\r\n                },\r\n                err => {\r\n                  console.log('[App] Delete subscription request failed', err)\r\n                }\r\n              );\r\n          }\r\n          else {\r\n            console.log(\"Prima di fare unsubscribe devi fare subscribe!\");\r\n          }\r\n          \r\n      });\r\n    }\r\n}","<!-- nav -->\r\n<nav class=\"navbar navbar-expand navbar-dark bg-dark\" *ngIf=\"user\">\r\n    <div class=\"navbar-nav\">\r\n        <a class=\"nav-item nav-link\" routerLink=\"/\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">Home</a>\r\n        <a class=\"nav-item nav-link\" routerLink=\"/users\" routerLinkActive=\"active\">Gestione Utente</a>\r\n        <a class=\"nav-item nav-link\" routerLink=\"/notification\" routerLinkActive=\"active\">Notifiche</a>\r\n        <a class=\"nav-item nav-link\" (click)=\"logout()\">Logout</a>\r\n    </div>\r\n</nav>\r\n\r\n<!-- main app container -->\r\n<div class=\"app-container\" [ngClass]=\"{ 'bg-light': user }\">\r\n    <alert></alert>\r\n    <router-outlet></router-outlet>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http'; \r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { AlertComponent } from './_components';\r\nimport { HomeComponent } from './home';\r\nimport { NotificationComponent } from './notification';;\r\nimport { ServiceWorkerModule } from '@angular/service-worker'; \r\nimport { environment } from '@environments/environment';\r\nimport { AccountService, NotificationService } from '../app/_services';\r\nimport {MatCardModule} from '@angular/material/card';\r\n\r\n@NgModule({\r\n    imports: [\r\n        BrowserModule,\r\n        ReactiveFormsModule,\r\n        HttpClientModule,\r\n        AppRoutingModule,\r\n        ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\r\n        MatCardModule\r\n    ],\r\n    declarations: [\r\n        AppComponent,\r\n        AlertComponent,\r\n        NotificationComponent\r\n\r\n    ],\r\n    providers: [AccountService, NotificationService\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { };","import { Component, OnInit } from '@angular/core';\r\nimport { User } from '@app/_models';\r\nimport { AccountService } from '@app/_services';\r\n\r\n@Component({ templateUrl: 'home.component.html' })\r\nexport class HomeComponent {\r\n    user: User;\r\n    constructor( private accountService: AccountService){\r\n        this.user= this.accountService.userValue;\r\n    }\r\n\r\n}","<div class=\"p-4\">\r\n    <div class=\"container\">\r\n        <h1>Benvenuto in Prontogram, {{user.name}}! </h1> \r\n        <!--<p><a routerLink=\"/users\">Gestisci utente</a></p>-->\r\n    </div>\r\n</div>","export * from './home.component';","export * from './notification.component';","import { Component, OnDestroy, OnInit} from '@angular/core';\r\nimport { Airport, Flight, Notification } from '../_models';\r\nimport { AccountService, NotificationService } from '../_services';\r\nimport { first, take, takeUntil } from 'rxjs/operators';\r\nimport {SwPush} from '@angular/service-worker'\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { User } from '../_models';\r\n\r\n@Component({ templateUrl: './notification.component.html' })\r\n\r\nexport class NotificationComponent implements  OnDestroy,OnInit{\r\n    notifications: Notification [];\r\n    sub: PushSubscription;\r\n    user: User;\r\n    private ngUnsubscribe = new Subject();\r\n\r\n    readonly VAPID_PUBLIC_KEY = \"BA161ZnkX9G6CwYOZifUyGpOxslxcANly0PfMtti7y1rDO9NZlPNI1yepdaTodQXX0gVHqXHVApmArL1MUNsBoM\";\r\n    constructor(\r\n        private swPush: SwPush,\r\n        private notificationService: NotificationService,\r\n        private accountService: AccountService        \r\n        ) {   \r\n           this.user= this.accountService.userValue;\r\n          }\r\n          \r\n    ngOnInit(){\r\n      if(navigator.serviceWorker){\r\n      // First, do a one-off check if there's currently a service worker in control.\r\n\r\n        if (navigator.serviceWorker.controller) {\r\n          console.log(`This page is currently controlled by: ${navigator.serviceWorker.controller}`);\r\n          navigator.serviceWorker.controller.onstatechange=function(){\r\n          console.log('state'+ navigator.serviceWorker.controller.state);\r\n        }\r\n        } else {\r\n          //This happens on ctrl+f5(force refresh)\r\n          console.log('This page is not currently controlled by a service worker.');\r\n          navigator.serviceWorker.register('./ngsw-worker.js').then(function(registration) {\r\n          console.log('Service worker registration succeeded:', registration);\r\n          window.location.reload();\r\n          })\r\n          , function(error) {\r\n                console.log('Service worker registration failed:', error);\r\n              };\r\n            }\r\n            // Then, register a handler to detect when a new or\r\n            // updated service worker takes control.\r\n            navigator.serviceWorker.oncontrollerchange = function() {\r\n              console.log('This page is now controlled by:', navigator.serviceWorker.controller);\r\n            };\r\n      }\r\n      else {\r\n        console.log('Service workers are not supported.');\r\n      }\r\n      //load all notifications\r\n      this.getAllNotifications ();\r\n\r\n       //add new notification to notifications\r\n      this.swPush.messages\r\n      .pipe(takeUntil(this.ngUnsubscribe))\r\n      .subscribe(message => {\r\n        //Create new Notification\r\n        let notification = message['notification']\r\n        let notify = new Notification ();\r\n        notify.flyBack = notification['data']['flyBack'];\r\n        notify.flyOutBound = notification['data']['flyOutBound']\r\n        notify.offerToken = notification['data']['offerToken'];\r\n        notify.username = notification['data']['username']\r\n        console.log (\"Notifica ricevuta \", notify)\r\n        this.updateNotificationView ()\r\n      });\r\n      //notification's actions\r\n      this.swPush.notificationClicks.subscribe(({ action, notification }) => {\r\n      //window.open(notification.data.url);\r\n      });\r\n      \r\n    }\r\n\r\n    deleteNotification(id: string) {\r\n      this.notificationService.delete(id)\r\n      .pipe(first())\r\n      .subscribe(() => this.notifications = this.notifications.filter(x => x._id !== id));\r\n    }\r\n\r\n    getAllNotifications () {\r\n      this.notificationService.getAll(this.user.username).subscribe(\r\n        (res : Notification []) => {\r\n          this.notifications = res;\r\n        },\r\n        (err) => {\r\n          console.error(err);\r\n        }\r\n      );\r\n    }\r\n\r\n    updateNotificationView () {\r\n      this.getAllNotifications ();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n      this.ngUnsubscribe.next();\r\n      this.ngUnsubscribe.complete();\r\n    }\r\n\r\n}\r\n\r\n","<div class=\"p-4\">\r\n    <div class=\"container\">\r\n        <h1>Notifiche</h1>\r\n            <div *ngFor=\"let notification of notifications\"> \r\n                <mat-card style=\"background-color:white; border: 1px solid rgb(42, 42, 43); margin-bottom: 5px \">\r\n                    <mat-card-title>\r\n                        Notifica volo per <b>{{notification.username}}</b>, il token dell'offerta da inserire su <i>ACMESky</i> è: <b>{{notification.offerToken}}</b>\r\n                        <mat-card-subtitle>\r\n                            <br>\r\n                            <b>Volo di andata</b> \r\n                            <mat-card-content>\r\n                                <table class=\"table table-striped\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th style=\"width: 10%\">Codice volo</th>\r\n                                            <th style=\"width: 35%\">Aereoporto di partenza</th>\r\n                                            <th style=\"width: 35%\">Aereoporto di arrivo</th>\r\n                                            <th style=\"width: 10%\">Compagnia aerea</th>\r\n                                            <th style=\"width: 10%\">Prezzo</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td>{{notification.flyOutBound.flightCode}}</td>\r\n                                            <td>\r\n                                                <div>\r\n                                                    Nome: {{notification.flyOutBound.departure_airport.name}}<br>\r\n                                                    Città: {{notification.flyOutBound.departure_airport.cityName}}<br>\r\n                                                    Data e ora: {{notification.flyOutBound.departureDateTime}}\r\n                                                </div>\r\n                                            </td> \r\n                                            <td>\r\n                                                <div>\r\n                                                    Nome: {{notification.flyOutBound.arrival_airport.name}}<br> \r\n                                                    Città: {{notification.flyOutBound.arrival_airport.cityName}}<br>\r\n                                                    Data e ora: {{notification.flyOutBound.arrivalDateTime}}\r\n                                                </div>\r\n                                            </td>\r\n                                            <td>{{notification.flyOutBound.AirlineName}}</td>\r\n                                            <td>{{notification.flyOutBound.price}} €</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </mat-card-content>   \r\n                        </mat-card-subtitle>\r\n                        <mat-card-subtitle *ngIf=\"notification.flyBack\">\r\n                            <b>Volo di ritorno</b> \r\n                            <mat-card-content>\r\n                                <table class=\"table table-striped\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th style=\"width: 10%\">Codice volo</th>\r\n                                            <th style=\"width: 35%\">Aereoporto di partenza</th>\r\n                                            <th style=\"width: 35%\">Aereoporto di arrivo</th>\r\n                                            <th style=\"width: 10%\">Compagnia aerea</th>\r\n                                            <th style=\"width: 10%\">Prezzo</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td>{{notification.flyBack.flightCode}}</td>\r\n                                            <td>\r\n                                                <div>\r\n                                                    Nome: {{notification.flyBack.departure_airport.name}}<br>\r\n                                                    Città: {{notification.flyBack.departure_airport.cityName}}<br>\r\n                                                    Data e ora: {{notification.flyBack.departureDateTime}}\r\n                                                </div>\r\n                                            </td> \r\n                                            <td>\r\n                                                <div>\r\n                                                    Nome: {{notification.flyBack.arrival_airport.name}}<br> \r\n                                                    Città: {{notification.flyBack.arrival_airport.cityName}}<br>\r\n                                                    Data e ora: {{notification.flyBack.arrivalDateTime}}\r\n                                                </div>\r\n                                            </td>\r\n                                            <td>{{notification.flyBack.AirlineName}}</td>\r\n                                            <td>{{notification.flyBack.price}} €</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </mat-card-content> \r\n                        </mat-card-subtitle>\r\n                    </mat-card-title>\r\n                    <mat-card-actions>\r\n                        <button (click)=\"deleteNotification(notification._id)\" class=\"btn btn-sm btn-danger btn-delete-user\" >\r\n                            <span *ngIf=\"notification.isDeleting\" class=\"spinner-border spinner-border-sm\"></span>\r\n                            <span *ngIf=\"!notification.isDeleting\">Elimina</span>\r\n                        </button>\r\n                    </mat-card-actions>\r\n\r\n                </mat-card>\r\n            </div>\r\n    </div>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'http://localhost:8000/api'\r\n  \r\n};\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n    enableProdMode();\r\n}\r\n\r\n//platformBrowserDynamic().bootstrapModule(AppModule)\r\n  //  .catch(err => console.error(err));\r\n  platformBrowserDynamic().bootstrapModule(AppModule).then(() => {\r\n    if ('serviceWorker' in navigator && environment.production) {\r\n      navigator.serviceWorker.register('ngsw-worker.js');\r\n    }\r\n  }).catch(err => console.log(err));"]}