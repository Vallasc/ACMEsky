{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/_components/alert.component.ts","./src/app/_components/alert.component.html","./src/app/_components/index.ts","./src/app/_helpers/auth.guard.ts","./src/app/_helpers/error.interceptor.ts","./src/app/_helpers/fake-backend.ts","./src/app/_helpers/index.ts","./src/app/_helpers/jwt.interceptor.ts","./src/app/_models/airport.ts","./src/app/_models/alert.ts","./src/app/_models/flight.ts","./src/app/_models/index.ts","./src/app/_models/notification.ts","./src/app/_models/subscription.ts","./src/app/_models/user.ts","./src/app/_services/account.service.ts","./src/app/_services/alert.service.ts","./src/app/_services/index.ts","./src/app/_services/notification.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/home/index.ts","./src/app/notification/index.ts","./src/app/notification/notification.component.ts","./src/app/notification/notification.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\r\nimport { Router, NavigationStart } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { Alert, AlertType } from '../_models';\r\nimport { AlertService } from '../_services';\r\n\r\n@Component({ selector: 'alert', templateUrl: 'alert.component.html' })\r\nexport class AlertComponent implements OnInit, OnDestroy {\r\n    @Input() id = 'default-alert';\r\n    @Input() fade = true;\r\n\r\n    alerts: Alert[] = [];\r\n    alertSubscription: Subscription;\r\n    routeSubscription: Subscription;\r\n\r\n    constructor(private router: Router, private alertService: AlertService) { }\r\n\r\n    ngOnInit() {\r\n        // subscribe to new alert notifications\r\n        this.alertSubscription = this.alertService.onAlert(this.id)\r\n            .subscribe(alert => {\r\n                // clear alerts when an empty alert is received\r\n                if (!alert.message) {\r\n                    // filter out alerts without 'keepAfterRouteChange' flag\r\n                    this.alerts = this.alerts.filter(x => x.keepAfterRouteChange);\r\n\r\n                    // remove 'keepAfterRouteChange' flag on the rest\r\n                    this.alerts.forEach(x => delete x.keepAfterRouteChange);\r\n                    return;\r\n                }\r\n\r\n                // add alert to array\r\n                this.alerts.push(alert);\r\n\r\n                // auto close alert if required\r\n                if (alert.autoClose) {\r\n                    setTimeout(() => this.removeAlert(alert), 3000);\r\n                }\r\n           });\r\n\r\n        // clear alerts on location change\r\n        this.routeSubscription = this.router.events.subscribe(event => {\r\n            if (event instanceof NavigationStart) {\r\n                this.alertService.clear(this.id);\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        // unsubscribe to avoid memory leaks\r\n        this.alertSubscription.unsubscribe();\r\n        this.routeSubscription.unsubscribe();\r\n    }\r\n\r\n    removeAlert(alert: Alert) {\r\n        // check if already removed to prevent error on auto close\r\n        if (!this.alerts.includes(alert)) return;\r\n\r\n        if (this.fade) {\r\n            // fade out alert\r\n            alert.fade = true;\r\n\r\n            // remove alert after faded out\r\n            setTimeout(() => {\r\n                this.alerts = this.alerts.filter(x => x !== alert);\r\n            }, 250);\r\n        } else {\r\n            // remove alert\r\n            this.alerts = this.alerts.filter(x => x !== alert);\r\n        }\r\n    }\r\n\r\n    cssClass(alert: Alert) {\r\n        if (!alert) return;\r\n\r\n        const classes = ['alert', 'alert-dismissable', 'mt-4', 'container'];\r\n                \r\n        const alertTypeClass = {\r\n            [AlertType.Success]: 'alert alert-success',\r\n            [AlertType.Error]: 'alert alert-danger',\r\n            [AlertType.Info]: 'alert alert-info',\r\n            [AlertType.Warning]: 'alert alert-warning'\r\n        }\r\n\r\n        classes.push(alertTypeClass[alert.type]);\r\n\r\n        if (alert.fade) {\r\n            classes.push('fade');\r\n        }\r\n\r\n        return classes.join(' ');\r\n    }\r\n}","<div *ngFor=\"let alert of alerts\" class=\"{{cssClass(alert)}}\">\r\n    <a class=\"close\" (click)=\"removeAlert(alert)\">&times;</a>\r\n    <span [innerHTML]=\"alert.message\"></span>\r\n</div>","export * from './alert.component';\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\nimport { AccountService } from '../_services';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(\r\n        private router: Router,\r\n        private accountService: AccountService\r\n    ) {}\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        const user = this.accountService.userValue;\r\n        if (user) {\r\n            // authorised so return true\r\n            return true;\r\n        }\r\n\r\n        // not logged in so redirect to login page with the return url\r\n        this.router.navigate(['/account/login'], { queryParams: { returnUrl: state.url }});\r\n        return false;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { AccountService } from '../_services';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    constructor(private accountService: AccountService) {}\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n            if ([401, 403].includes(err.status) && this.accountService.userValue) {\r\n                // auto logout if 401 or 403 response returned from api\r\n                this.accountService.logout();\r\n            }\r\n\r\n            const error = err.error?.message || err.statusText;\r\n            console.error(err);\r\n            return throwError(error);\r\n        }))\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpResponse, HttpHandler, HttpEvent, HttpInterceptor, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { delay, materialize, dematerialize } from 'rxjs/operators';\r\n\r\n// array in local storage for registered users\r\nconst usersKey = 'Prontogram';\r\nlet users = JSON.parse(localStorage.getItem(usersKey)) || [];\r\n\r\n@Injectable()\r\nexport class FakeBackendInterceptor implements HttpInterceptor {\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        const { url, method, headers, body } = request;\r\n\r\n        return handleRoute();\r\n\r\n        function handleRoute() {\r\n            switch (true) {\r\n                case url.endsWith('/users/authenticate') && method === 'POST':\r\n                    return authenticate();\r\n                case url.endsWith('/users/register') && method === 'POST':\r\n                    return register();\r\n                case url.endsWith('/users') && method === 'GET':\r\n                    return getUsers();\r\n                case url.match(/\\/users\\/\\d+$/) && method === 'GET':\r\n                    return getUserById();\r\n                case url.match(/\\/users\\/\\d+$/) && method === 'PUT':\r\n                    return updateUser();\r\n                case url.match(/\\/users\\/\\d+$/) && method === 'DELETE':\r\n                    return deleteUser();\r\n                default:\r\n                    // pass through any requests not handled above\r\n                    return next.handle(request);\r\n            }    \r\n        }\r\n\r\n        // route functions\r\n\r\n        function authenticate() {\r\n            const { username, password } = body;\r\n            const user = users.find(x => x.username === username && x.password === password);\r\n            if (!user) return error('Username or password is incorrect');\r\n            return ok({\r\n                ...basicDetails(user),\r\n                token: 'fake-jwt-token'\r\n            })\r\n        }\r\n\r\n        function register() {\r\n            const user = body\r\n\r\n            if (users.find(x => x.username === user.username)) {\r\n                return error('Username \"' + user.username + '\" is already taken')\r\n            }\r\n\r\n            user.id = users.length ? Math.max(...users.map(x => x.id)) + 1 : 1;\r\n            users.push(user);\r\n            localStorage.setItem(usersKey, JSON.stringify(users));\r\n            return ok();\r\n        }\r\n\r\n        function getUsers() {\r\n            if (!isLoggedIn()) return unauthorized();\r\n            return ok(users.map(x => basicDetails(x)));\r\n        }\r\n\r\n        function getUserById() {\r\n            if (!isLoggedIn()) return unauthorized();\r\n\r\n            const user = users.find(x => x.id === idFromUrl());\r\n            return ok(basicDetails(user));\r\n        }\r\n\r\n        function updateUser() {\r\n            if (!isLoggedIn()) return unauthorized();\r\n\r\n            let params = body;\r\n            let user = users.find(x => x.id === idFromUrl());\r\n\r\n            // only update password if entered\r\n            if (!params.password) {\r\n                delete params.password;\r\n            }\r\n\r\n            // update and save user\r\n            Object.assign(user, params);\r\n            localStorage.setItem(usersKey, JSON.stringify(users));\r\n\r\n            return ok();\r\n        }\r\n\r\n        function deleteUser() {\r\n            if (!isLoggedIn()) return unauthorized();\r\n\r\n            users = users.filter(x => x.id !== idFromUrl());\r\n            localStorage.setItem(usersKey, JSON.stringify(users));\r\n            return ok();\r\n        }\r\n\r\n        // helper functions\r\n\r\n        function ok(body?) {\r\n            return of(new HttpResponse({ status: 200, body }))\r\n                .pipe(delay(500)); // delay observable to simulate server api call\r\n        }\r\n\r\n        function error(message) {\r\n            return throwError({ error: { message } })\r\n                .pipe(materialize(), delay(500), dematerialize()); // call materialize and dematerialize to ensure delay even if an error is thrown;\r\n        }\r\n\r\n        function unauthorized() {\r\n            return throwError({ status: 401, error: { message: 'Unauthorized' } })\r\n                .pipe(materialize(), delay(500), dematerialize());\r\n        }\r\n\r\n        function basicDetails(user) {\r\n            const { id, username, nome, cognome } = user;\r\n            return { id, username, nome, cognome };\r\n        }\r\n\r\n        function isLoggedIn() {\r\n            return headers.get('Authorization') === 'Bearer fake-jwt-token';\r\n        }\r\n\r\n        function idFromUrl() {\r\n            const urlParts = url.split('/');\r\n            return parseInt(urlParts[urlParts.length - 1]);\r\n        }\r\n    }\r\n}\r\n\r\nexport const fakeBackendProvider = {\r\n    // use fake backend in place of Http service for backend-less development\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: FakeBackendInterceptor,\r\n    multi: true\r\n};","export * from './auth.guard';\r\nexport * from './error.interceptor';\r\nexport * from './jwt.interceptor';\r\nexport * from './fake-backend';","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { environment } from '../../environments/environment';\r\nimport { AccountService } from '../_services';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n    constructor(private accountService: AccountService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // add auth header with jwt if user is logged in and request is to the api url\r\n        const user = this.accountService.userValue;\r\n        const isLoggedIn = user && user.token;\r\n        const isApiUrl = request.url.startsWith(environment.apiUrl);\r\n        if (isLoggedIn && isApiUrl) {\r\n            request = request.clone({\r\n                setHeaders: {\r\n                    Authorization: `Bearer ${user.token}`\r\n                }\r\n            });\r\n        }\r\n\r\n        return next.handle(request);\r\n    }\r\n}","export class Airport {\r\n    code: string\r\n    name: string;\r\n    cityName: string;\r\n    countryCode: string;\r\n}","export class Alert {\r\n    id: string;\r\n    type: AlertType;\r\n    message: string;\r\n    autoClose: boolean;\r\n    keepAfterRouteChange: boolean;\r\n    fade: boolean;\r\n\r\n    constructor(init?:Partial<Alert>) {\r\n        Object.assign(this, init);\r\n    }\r\n}\r\n\r\nexport enum AlertType {\r\n    Success,\r\n    Error,\r\n    Info,\r\n    Warning\r\n}","import { Airport } from \"./airport\";\r\n\r\nexport class Flight {\r\n    flightCode: string;\r\n    departure_airport: Airport;\r\n    arrival_airport: Airport;\r\n    AirlineName: string;\r\n    departureDateTime: Date;\r\n    arrivalDateTime: Date;\r\n    price: number;\r\n}","export * from './alert';\r\nexport * from './user';\r\nexport * from './notification';\r\nexport * from './subscription';\r\nexport * from './flight';\r\nexport * from './airport';\r\n","import { Flight } from \"./flight\";\r\n\r\nexport class Notification {\r\n    _id: string;\r\n    flyBack: Flight;\r\n    flyOutBound: Flight;\r\n    offerToken: string;\r\n    username: string;\r\n}\r\n","export class Subscription {\r\n    subscription: any;\r\n    username: string;\r\n}","export class User {\r\n    _id: string;\r\n    name: string;\r\n    password: string;\r\n    secondName: string;\r\n    username: string;\r\n    token:string\r\n}","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { environment } from '../../environments/environment';\r\nimport { User } from '../_models';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AccountService {\r\n    private userSubject: BehaviorSubject<User>;\r\n    public user: Observable<User>;\r\n    private header: HttpHeaders \r\n\r\n    constructor(\r\n        private router: Router,\r\n        private http: HttpClient,\r\n        \r\n    ) {\r\n        this.userSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('user')));\r\n        this.user = this.userSubject.asObservable();\r\n       \r\n    }\r\n\r\n    public get userValue(): User {\r\n        return this.userSubject.value;\r\n    }\r\n\r\n    isLoggedIn() {\r\n        return this.header.get('auth-token') === this.userValue.token;\r\n    }\r\n\r\n    login(username, password) {\r\n        return this.http.post<User>(`${environment.apiUrl}/auth/login`, { username, password })\r\n        .pipe(map(user => {\r\n            this.userSubject.next(user);\r\n            this.header = new HttpHeaders().set(\r\n                \"auth-token\",\r\n                this.userSubject.value.token\r\n              );\r\n            // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n            localStorage.setItem('user', JSON.stringify(user));\r\n            return user;\r\n        }));\r\n    }\r\n\r\n    logout() {\r\n        this.userSubject.next(null);\r\n        this.router.navigate(['/account/login']);\r\n    }\r\n\r\n    register(user: User) {\r\n        return this.http.post(`${environment.apiUrl}/auth/register`, user);\r\n    }\r\n\r\n    createUser(user: User) {\r\n        return this.http.post(`${environment.apiUrl}/user/new`, user, {headers: this.getheader ()});\r\n    }\r\n\r\n    getAll() {\r\n        return this.http.get<User[]>(`${environment.apiUrl}/user/all`, {headers: this.getheader ()}); \r\n    }\r\n\r\n    getById(id: string) {\r\n        return  this.http.get<User>(`${environment.apiUrl}/user/${id}`, {headers: this.getheader ()});\r\n    }\r\n\r\n    update(id, params) {\r\n        return this.http.put(`${environment.apiUrl}/user/${id}`, params, {headers: this.getheader ()})\r\n            .pipe(map(x => {\r\n                // update stored user if the logged in user updated their own record\r\n                if (id == this.userValue._id) {\r\n                    // update local storage\r\n                    const user = { ...this.userValue, ...params };\r\n                    localStorage.setItem('user', JSON.stringify(user));\r\n\r\n                    // publish updated user to subscribers\r\n                    this.userSubject.next(user);\r\n                }\r\n                return x; \r\n            }));\r\n    }\r\n\r\n    delete(id: string) {\r\n        return this.http.delete(`${environment.apiUrl}/user/${id}`, {headers: this.getheader ()})\r\n            .pipe(map(x => {\r\n                // auto logout if the logged in user deleted their own record\r\n                if (id == this.userValue._id) {\r\n                    this.logout();\r\n                }\r\n                return x;\r\n            }));\r\n    }\r\n\r\n    getheader (): HttpHeaders {\r\n       return this.header = new HttpHeaders().set(\r\n            \"auth-token\",\r\n            this.userSubject.value.token\r\n          );\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\nimport { Alert, AlertType } from '../_models';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AlertService {\r\n    private subject = new Subject<Alert>();\r\n    private defaultId = 'default-alert';\r\n\r\n    // enable subscribing to alerts observable\r\n    onAlert(id = this.defaultId): Observable<Alert> {\r\n        return this.subject.asObservable().pipe(filter(x => x && x.id === id));\r\n    }\r\n\r\n    // convenience methods\r\n    success(message: string, options?: any) {\r\n        this.alert(new Alert({ ...options, type: AlertType.Success, message }));\r\n    }\r\n\r\n    error(message: string, options?: any) {\r\n        this.alert(new Alert({ ...options, type: AlertType.Error, message }));\r\n    }\r\n\r\n    info(message: string, options?: any) {\r\n        this.alert(new Alert({ ...options, type: AlertType.Info, message }));\r\n    }\r\n\r\n    warn(message: string, options?: any) {\r\n        this.alert(new Alert({ ...options, type: AlertType.Warning, message }));\r\n    }\r\n\r\n    // main alert method    \r\n    alert(alert: Alert) {\r\n        alert.id = alert.id || this.defaultId;\r\n        this.subject.next(alert);\r\n    }\r\n\r\n    // clear alerts\r\n    clear(id = this.defaultId) {\r\n        this.subject.next(new Alert({ id }));\r\n    }\r\n}","export * from './account.service';\r\nexport * from './notification.service';\r\nexport * from './alert.service';\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../environments/environment';\r\nimport { Notification, Subscription, User } from '../_models';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class NotificationService {\r\n    private notificationSubject: BehaviorSubject<Notification>;\r\n    public notification: Observable<Notification>;\r\n    constructor(\r\n        private http: HttpClient,\r\n        \r\n    ) {\r\n        this.notificationSubject = new BehaviorSubject<Notification>(JSON.parse(localStorage.getItem('notification')));\r\n        this.notification = this.notificationSubject.asObservable();\r\n    }\r\n\r\n    public get notificationValue(): Notification {\r\n        return this.notificationSubject.value;\r\n    }\r\n\r\n    createNotification(notification: Notification) {\r\n        return this.http.post(`${environment.apiUrl}/notification/new`, notification);\r\n    }\r\n\r\n    getAll(username: string) {\r\n        return this.http.get<Notification[]>(`${environment.apiUrl}/notification/all/${username}`); \r\n    }\r\n\r\n    getById(id: string) {\r\n        return  this.http.get<Notification>(`${environment.apiUrl}/notification/findOne/${id}`);\r\n    }\r\n\r\n    update(id, params) {\r\n        return this.http.put(`${environment.apiUrl}/notification/${id}`, params);\r\n    }\r\n\r\n    delete(id: string) {\r\n        return this.http.delete(`${environment.apiUrl}/notification/${id}`)\r\n            .pipe(map(x => {\r\n                return x;\r\n            }));\r\n    }\r\n\r\n    sendSubscriptionToTheServer (subscription: PushSubscription, user: User) {\r\n        const sub = new Subscription ();\r\n        sub.subscription = subscription;\r\n        sub.username = user.username;\r\n        console.log (sub);\r\n        return  this.http.post(`${environment.apiUrl}/subscription/new`,sub);\r\n    }\r\n\r\n    unsubscribeToNotification (subscription: PushSubscription) {\r\n        return  this.http.delete(`${environment.apiUrl}/subscription/${subscription.toJSON()}`);\r\n    }\r\n\r\n    send() {\r\n        return this.http.post(`${environment.apiUrl}/notification/news`,null);\r\n    }\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { HomeComponent } from './home';\r\nimport { NotificationComponent } from './notification';\r\nimport { AuthGuard } from './_helpers';\r\n\r\nconst accountModule = () => import('./account/account.module').then(x => x.AccountModule);\r\nconst usersModule = () => import('./users/users.module').then(x => x.UsersModule);\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: HomeComponent, canActivate: [AuthGuard] },\r\n    { path: 'users', loadChildren: usersModule, canActivate: [AuthGuard] },\r\n    { path: 'account', loadChildren: accountModule },\r\n    { path: 'notification', component: NotificationComponent, canActivate: [AuthGuard] },\r\n\r\n    // otherwise redirect to home\r\n    { path: '**', redirectTo: '' }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }","import { Component, OnInit } from '@angular/core';\r\nimport { AccountService, NotificationService } from './_services';\r\nimport { User, Notification } from './_models';\r\nimport { SwPush, SwUpdate } from '@angular/service-worker';\r\nimport { take } from 'rxjs/operators';\r\n@Component({ selector: 'app', templateUrl: 'app.component.html' })\r\nexport class AppComponent implements OnInit {\r\n\r\n    user: User;\r\n    notification: Notification;\r\n    readonly VAPID_PUBLIC_KEY = \"BA161ZnkX9G6CwYOZifUyGpOxslxcANly0PfMtti7y1rDO9NZlPNI1yepdaTodQXX0gVHqXHVApmArL1MUNsBoM\";\r\n\r\n    constructor(\r\n        private accountService: AccountService, \r\n        private notificationService: NotificationService,\r\n        private swUpdate: SwUpdate,\r\n        private swPush: SwPush,\r\n        ) {\r\n        this.accountService.user.subscribe(x => this.user = x);\r\n        this.notificationService.notification.subscribe(x => this.notification = x);\r\n        this.pushSubscription();\r\n        }\r\n\r\n    ngOnInit () {\r\n\r\n        if (this.swUpdate.isEnabled) {\r\n\r\n            this.swUpdate.available.subscribe(() => {\r\n\r\n                if (confirm(\"New version available. Load New Version?\")) {\r\n                    window.location.reload();\r\n                }\r\n\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    pushSubscription () {\r\n        if(this.swPush.isEnabled){\r\n        this.swPush.requestSubscription({\r\n        serverPublicKey: this.VAPID_PUBLIC_KEY\r\n        })\r\n        .then(sub =>{this.notificationService.sendSubscriptionToTheServer(sub,this.user).subscribe(x=>console.log(x),err=>console.log(err))})\r\n        .catch(err => console.error(\"Could not subscribe to notifications\", err));\r\n        }\r\n    }\r\n\r\n    logout() {\r\n        this.accountService.logout();\r\n        this.unsubscribeNotifications();\r\n    }\r\n\r\n    unsubscribeNotifications(){\r\n        this.swPush.subscription.pipe(take(1)).subscribe(subscriptionValue=>{\r\n          if (subscriptionValue) {\r\n              this.notificationService.unsubscribeToNotification (subscriptionValue)\r\n              .subscribe(\r\n                res => {\r\n                  // Unsubscribe current client (browser)\r\n                  subscriptionValue.unsubscribe()\r\n                    .then(success => {\r\n                      console.log('[App] Unsubscription successful', success)\r\n                    })\r\n                    .catch(err => {\r\n                      console.log('[App] Unsubscription failed', err)\r\n                    })\r\n                },\r\n                err => {\r\n                  console.log('[App] Delete subscription request failed', err)\r\n                }\r\n              );\r\n          }\r\n          else {\r\n            console.log(\"Prima di fare unsubscribe devi fare subscribe!\");\r\n          }\r\n          \r\n      });\r\n    }\r\n}","<!-- nav -->\r\n<nav class=\"navbar navbar-expand navbar-dark bg-dark\" *ngIf=\"user\">\r\n    <div class=\"navbar-nav\">\r\n        <a class=\"nav-item nav-link\" routerLink=\"/\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">Home</a>\r\n        <a class=\"nav-item nav-link\" routerLink=\"/users\" routerLinkActive=\"active\">Gestione Utente</a>\r\n        <a class=\"nav-item nav-link\" routerLink=\"/notification\" routerLinkActive=\"active\">Notifiche</a>\r\n        <a class=\"nav-item nav-link\" (click)=\"logout()\">Logout</a>\r\n    </div>\r\n</nav>\r\n\r\n<!-- main app container -->\r\n<div class=\"app-container\" [ngClass]=\"{ 'bg-light': user }\">\r\n    <alert></alert>\r\n    <router-outlet></router-outlet>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http'; \r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { AlertComponent } from './_components';\r\nimport { HomeComponent } from './home';\r\nimport { NotificationComponent } from './notification';;\r\nimport { ServiceWorkerModule } from '@angular/service-worker'; \r\nimport { environment } from '@environments/environment';\r\nimport { AccountService, NotificationService } from '../app/_services';\r\nimport {MatCardModule} from '@angular/material/card';\r\n\r\n@NgModule({\r\n    imports: [\r\n        BrowserModule,\r\n        ReactiveFormsModule,\r\n        HttpClientModule,\r\n        AppRoutingModule,\r\n        ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\r\n        MatCardModule\r\n    ],\r\n    declarations: [\r\n        AppComponent,\r\n        AlertComponent,\r\n        NotificationComponent\r\n\r\n    ],\r\n    providers: [AccountService, NotificationService\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { };","import { Component, OnInit } from '@angular/core';\r\nimport { User } from '@app/_models';\r\nimport { AccountService } from '@app/_services';\r\n\r\n@Component({ templateUrl: 'home.component.html' })\r\nexport class HomeComponent {\r\n    user: User;\r\n    constructor( private accountService: AccountService){\r\n        this.user= this.accountService.userValue;\r\n    }\r\n\r\n}","<div class=\"p-4\">\r\n    <div class=\"container\">\r\n        <h1>Benvenuto in Prontogram, {{user.name}}! </h1> \r\n        <!--<p><a routerLink=\"/users\">Gestisci utente</a></p>-->\r\n    </div>\r\n</div>","export * from './home.component';","export * from './notification.component';","import { Component, OnDestroy, OnInit} from '@angular/core';\r\nimport { Airport, Flight, Notification } from '../_models';\r\nimport { AccountService, NotificationService } from '../_services';\r\nimport { first, take, takeUntil } from 'rxjs/operators';\r\nimport {SwPush} from '@angular/service-worker'\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { User } from '../_models';\r\n\r\n@Component({ templateUrl: './notification.component.html' })\r\n\r\nexport class NotificationComponent implements  OnDestroy,OnInit{\r\n    notifications: Notification [];\r\n    sub: PushSubscription;\r\n    user: User;\r\n    private ngUnsubscribe = new Subject();\r\n\r\n    readonly VAPID_PUBLIC_KEY = \"BA161ZnkX9G6CwYOZifUyGpOxslxcANly0PfMtti7y1rDO9NZlPNI1yepdaTodQXX0gVHqXHVApmArL1MUNsBoM\";\r\n    constructor(\r\n        private swPush: SwPush,\r\n        private notificationService: NotificationService,\r\n        private accountService: AccountService        \r\n        ) {   \r\n           this.user= this.accountService.userValue;\r\n          }\r\n          \r\n    ngOnInit(){\r\n      if(navigator.serviceWorker){\r\n      // First, do a one-off check if there's currently a service worker in control.\r\n\r\n        if (navigator.serviceWorker.controller) {\r\n          console.log(`This page is currently controlled by: ${navigator.serviceWorker.controller}`);\r\n          navigator.serviceWorker.controller.onstatechange=function(){\r\n          console.log('state'+ navigator.serviceWorker.controller.state);\r\n        }\r\n        } else {\r\n          //This happens on ctrl+f5(force refresh)\r\n          console.log('This page is not currently controlled by a service worker.');\r\n          navigator.serviceWorker.register('./ngsw-worker.js').then(function(registration) {\r\n          console.log('Service worker registration succeeded:', registration);\r\n          window.location.reload();\r\n          })\r\n          , function(error) {\r\n                console.log('Service worker registration failed:', error);\r\n              };\r\n            }\r\n            // Then, register a handler to detect when a new or\r\n            // updated service worker takes control.\r\n            navigator.serviceWorker.oncontrollerchange = function() {\r\n              console.log('This page is now controlled by:', navigator.serviceWorker.controller);\r\n            };\r\n      }\r\n      else {\r\n        console.log('Service workers are not supported.');\r\n      }\r\n      //load all notifications\r\n      this.getAllNotifications ();\r\n\r\n       //add new notification to notifications\r\n      this.swPush.messages\r\n      .pipe(takeUntil(this.ngUnsubscribe))\r\n      .subscribe(message => {\r\n        //Create new Notification\r\n        let notification = message['notification']\r\n        let notify = new Notification ();\r\n        notify.flyBack = notification['data']['flyBack'];\r\n        notify.flyOutBound = notification['data']['flyOutBound']\r\n        notify.offerToken = notification['data']['offerToken'];\r\n        notify.username = notification['data']['username']\r\n        console.log (\"Notifica ricevuta \", notify)\r\n        this.updateNotificationView ()\r\n      });\r\n      //notification's actions\r\n      this.swPush.notificationClicks.subscribe(({ action, notification }) => {\r\n      //window.open(notification.data.url);\r\n      });\r\n      \r\n    }\r\n\r\n    deleteNotification(id: string) {\r\n      this.notificationService.delete(id)\r\n      .pipe(first())\r\n      .subscribe(() => this.notifications = this.notifications.filter(x => x._id !== id));\r\n    }\r\n\r\n    getAllNotifications () {\r\n      this.notificationService.getAll(this.user.username).subscribe(\r\n        (res : Notification []) => {\r\n          this.notifications = res;\r\n        },\r\n        (err) => {\r\n          console.error(err);\r\n        }\r\n      );\r\n    }\r\n\r\n    updateNotificationView () {\r\n      this.getAllNotifications ();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n      this.ngUnsubscribe.next();\r\n      this.ngUnsubscribe.complete();\r\n    }\r\n\r\n}\r\n\r\n","<div class=\"p-4\">\r\n    <div class=\"container\">\r\n        <h1>Notifiche</h1>\r\n            <div *ngFor=\"let notification of notifications\"> \r\n                <mat-card style=\"background-color:white; border: 1px solid rgb(42, 42, 43); margin-bottom: 5px \">\r\n                    <mat-card-title>\r\n                        Notifica volo per <b>{{notification.username}}</b>, il token dell'offerta da inserire su <i>ACMESky</i> è: <b>{{notification.offerToken}}</b>\r\n                        <mat-card-subtitle>\r\n                            <br>\r\n                            <b>Volo di andata</b> \r\n                            <mat-card-content>\r\n                                <table class=\"table table-striped\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th style=\"width: 10%\">Codice volo</th>\r\n                                            <th style=\"width: 35%\">Aereoporto di partenza</th>\r\n                                            <th style=\"width: 35%\">Aereoporto di arrivo</th>\r\n                                            <th style=\"width: 10%\">Compagnia aerea</th>\r\n                                            <th style=\"width: 10%\">Prezzo</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td>{{notification.flyOutBound.flightCode}}</td>\r\n                                            <td>\r\n                                                <div>\r\n                                                    Nome: {{notification.flyOutBound.departure_airport.name}}<br>\r\n                                                    Città: {{notification.flyOutBound.departure_airport.cityName}}<br>\r\n                                                    Data e ora: {{notification.flyOutBound.departureDateTime}}\r\n                                                </div>\r\n                                            </td> \r\n                                            <td>\r\n                                                <div>\r\n                                                    Nome: {{notification.flyOutBound.arrival_airport.name}}<br> \r\n                                                    Città: {{notification.flyOutBound.arrival_airport.cityName}}<br>\r\n                                                    Data e ora: {{notification.flyOutBound.arrivalDateTime}}\r\n                                                </div>\r\n                                            </td>\r\n                                            <td>{{notification.flyOutBound.AirlineName}}</td>\r\n                                            <td>{{notification.flyOutBound.price}} €</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </mat-card-content>   \r\n                        </mat-card-subtitle>\r\n                        <mat-card-subtitle *ngIf=\"notification.flyBack\">\r\n                            <b>Volo di ritorno</b> \r\n                            <mat-card-content>\r\n                                <table class=\"table table-striped\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th style=\"width: 10%\">Codice volo</th>\r\n                                            <th style=\"width: 35%\">Aereoporto di partenza</th>\r\n                                            <th style=\"width: 35%\">Aereoporto di arrivo</th>\r\n                                            <th style=\"width: 10%\">Compagnia aerea</th>\r\n                                            <th style=\"width: 10%\">Prezzo</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td>{{notification.flyBack.flightCode}}</td>\r\n                                            <td>\r\n                                                <div>\r\n                                                    Nome: {{notification.flyBack.departure_airport.name}}<br>\r\n                                                    Città: {{notification.flyBack.departure_airport.cityName}}<br>\r\n                                                    Data e ora: {{notification.flyBack.departureDateTime}}\r\n                                                </div>\r\n                                            </td> \r\n                                            <td>\r\n                                                <div>\r\n                                                    Nome: {{notification.flyBack.arrival_airport.name}}<br> \r\n                                                    Città: {{notification.flyBack.arrival_airport.cityName}}<br>\r\n                                                    Data e ora: {{notification.flyBack.arrivalDateTime}}\r\n                                                </div>\r\n                                            </td>\r\n                                            <td>{{notification.flyBack.AirlineName}}</td>\r\n                                            <td>{{notification.flyBack.price}} €</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </mat-card-content> \r\n                        </mat-card-subtitle>\r\n                    </mat-card-title>\r\n                    <mat-card-actions>\r\n                        <button (click)=\"deleteNotification(notification._id)\" class=\"btn btn-sm btn-danger btn-delete-user\" >\r\n                            <span *ngIf=\"notification.isDeleting\" class=\"spinner-border spinner-border-sm\"></span>\r\n                            <span *ngIf=\"!notification.isDeleting\">Elimina</span>\r\n                        </button>\r\n                    </mat-card-actions>\r\n\r\n                </mat-card>\r\n            </div>\r\n    </div>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'http://localhost:8000/api'\r\n  \r\n};\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n    enableProdMode();\r\n}\r\n\r\n//platformBrowserDynamic().bootstrapModule(AppModule)\r\n  //  .catch(err => console.error(err));\r\n  platformBrowserDynamic().bootstrapModule(AppModule).then(() => {\r\n    if ('serviceWorker' in navigator && environment.production) {\r\n      navigator.serviceWorker.register('ngsw-worker.js');\r\n    }\r\n  }).catch(err => console.log(err));"],"sourceRoot":"webpack:///"}