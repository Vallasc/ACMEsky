{"version":3,"sources":["webpack:///src/app/users/add-edit.component.ts","webpack:///src/app/users/add-edit.component.html","webpack:///src/app/users/layout.component.ts","webpack:///src/app/users/layout.component.html","webpack:///src/app/users/list.component.ts","webpack:///src/app/users/list.component.html","webpack:///src/app/users/users-routing.module.ts","webpack:///src/app/users/users.module.ts"],"names":["AddEditComponent","formBuilder","route","router","accountService","alertService","loading","submitted","id","snapshot","params","isAddMode","passwordValidators","minLength","push","required","form","group","name","secondName","username","password","getById","pipe","subscribe","x","patchValue","controls","clear","invalid","createUser","updateUser","value","next","success","keepAfterRouteChange","navigate","relativeTo","error","update","onSubmit","templateUrl","LayoutComponent","ListComponent","user","userValue","deleteUser","routes","path","component","children","UsersRoutingModule","forChild","imports","exports","UsersModule","declarations"],"mappings":"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","file":"users-users-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { AccountService, AlertService } from '../_services';\r\n\r\n@Component({ templateUrl: 'add-edit.component.html' })\r\nexport class AddEditComponent implements OnInit {\r\n    form: FormGroup;\r\n    id: string;\r\n    isAddMode: boolean;\r\n    loading = false;\r\n    submitted = false;\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private accountService: AccountService,\r\n        private alertService: AlertService\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.id = this.route.snapshot.params['id'];\r\n        this.isAddMode = !this.id;\r\n        \r\n        // Vincoli sui field password e username\r\n        const passwordValidators = [Validators.minLength(6)];\r\n\r\n        if (this.isAddMode) {\r\n            passwordValidators.push(Validators.required);\r\n        }\r\n\r\n        this.form = this.formBuilder.group({\r\n            name: ['', Validators.required],\r\n            secondName: ['', Validators.required],\r\n            username: ['',[Validators.required, Validators.minLength(6)]],\r\n            password: ['', passwordValidators]\r\n        });\r\n\r\n        if (!this.isAddMode) {\r\n            this.accountService.getById(this.id)\r\n                .pipe(first())\r\n                .subscribe(x => this.form.patchValue(x));\r\n        }\r\n    }\r\n\r\n    // convenience getter for easy access to form fields\r\n    get f() { return this.form.controls; }\r\n\r\n    onSubmit() {\r\n        this.submitted = true;\r\n\r\n        // reset alerts on submit\r\n        this.alertService.clear();\r\n\r\n        // stop here if form is invalid\r\n        if (this.form.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.loading = true;\r\n        if (this.isAddMode) {\r\n            this.createUser();\r\n        } else {\r\n            this.updateUser();\r\n        }\r\n    }\r\n\r\n    private createUser() {\r\n        this.accountService.createUser(this.form.value)\r\n            .pipe(first())\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alertService.success('Utente aggiunto con successo', { keepAfterRouteChange: true });\r\n                    this.router.navigate(['../'], { relativeTo: this.route });\r\n                },\r\n                error: error => {\r\n                    this.alertService.error(\"Username già esistente\");\r\n                    this.loading = false;\r\n                }\r\n            });\r\n    }\r\n\r\n    private updateUser() {\r\n        this.accountService.update(this.id, this.form.value)\r\n            .pipe(first())\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alertService.success('Utente aggiornato con successo', { keepAfterRouteChange: true });\r\n                    this.router.navigate(['../../'], { relativeTo: this.route });\r\n                },\r\n                error: error => {\r\n                    this.alertService.error(error);\r\n                    this.loading = false;\r\n                }\r\n            });\r\n    }\r\n}","<h1 *ngIf=\"isAddMode\">Aggiungi utente</h1>\r\n<h1 *ngIf=\"!isAddMode\">Modifica utente</h1>\r\n<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"form-row\">\r\n        <div class=\"form-group col\">\r\n            <label for=\"name\">Nome</label>\r\n            <input type=\"text\" formControlName=\"name\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.name.errors }\" />\r\n            <div *ngIf=\"submitted && f.name.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.name.errors.required\">Nome obbligatorio</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group col\">\r\n            <label for=\"secondName\">Cognome</label>\r\n            <input type=\"text\" formControlName=\"secondName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.secondName.errors }\" />\r\n            <div *ngIf=\"submitted && f.secondName.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.secondName.errors.required\">Cognome obbligatorio</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-row\">\r\n        <div class=\"form-group col\">\r\n            <label for=\"username\">Username</label>\r\n            <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\r\n            <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.username.errors.required\">Username obbligatorio</div>\r\n                <div *ngIf=\"f.username.errors.minlength\">L'username deve essere almeno di 6 caratteri</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group col\">\r\n            <label for=\"password\">\r\n                Password\r\n                <em *ngIf=\"!isAddMode\">(Non inserire la password se vuoi lasciare quella precedente)</em>\r\n            </label>\r\n            <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\r\n            <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.password.errors.required\">Password obbligatoria</div>\r\n                <div *ngIf=\"f.password.errors.minlength\">La password deve essere almeno di 6 caratteri</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n            Salva\r\n        </button>\r\n        <a routerLink=\"/users\" class=\"btn btn-link\">Cancella</a>\r\n    </div>\r\n</form>","import { Component } from '@angular/core';\r\n\r\n@Component({ templateUrl: 'layout.component.html' })\r\nexport class LayoutComponent { }","<div class=\"p-4\">\r\n    <div class=\"container\">\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { User } from '@app/_models';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { AccountService } from '../_services';\r\n\r\n@Component({ templateUrl: 'list.component.html' })\r\nexport class ListComponent implements OnInit {\r\n    //users: User[] = [];\r\n    user: User \r\n    constructor(private accountService: AccountService) {}\r\n\r\n    ngOnInit() {\r\n        //this.accountService.getAll().subscribe (user => this.users = user)  \r\n        this.user = this.accountService.userValue;\r\n    }\r\n    /*basicDetails(user) {\r\n  \r\n        const { _id, name, password, secondName, username, token} = user;\r\n        return { _id, name, password, secondName, username, token };\r\n\r\n    }*/\r\n    deleteUser(id: string) {\r\n        \r\n        //const user = this.users.find(x => x._id === id);\r\n        this.accountService.delete(id)\r\n           .pipe(first()).subscribe();\r\n           //.subscribe(() => this.user = this.user.filter(x => x._id !== id));\r\n    }\r\n}","<h1>Utente</h1>\r\n<!--<a routerLink=\"add\" class=\"btn btn-sm btn-success mb-2\">Aggiungi utente</a>-->\r\n<table class=\"table table-striped\">\r\n    <thead>\r\n        <tr>\r\n            <th style=\"width: 30%\">Nome</th>\r\n            <th style=\"width: 30%\">Cognome</th>\r\n            <th style=\"width: 30%\">Username</th>\r\n            <th style=\"width: 10%\"></th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <td>{{user.name}}</td>\r\n        <td>{{user.secondName}}</td>\r\n        <td>{{user.username}}</td>\r\n        <td style=\"white-space: nowrap\">\r\n        <a routerLink=\"edit/{{user._id}}\" class=\"btn btn-sm btn-primary mr-1\">Modifica</a>\r\n        <button (click)=\"deleteUser(user._id)\" class=\"btn btn-sm btn-danger btn-delete-user\">Elimina account</button>\r\n                    <!--<span *ngIf=\"user.isDeleting\" class=\"spinner-border spinner-border-sm\"></span>\r\n                    <span *ngIf=\"!user.isDeleting\">Elimina</span> -->\r\n        </td>\r\n        <!--<tr *ngFor=\"let user of users\">\r\n            <td>{{user.name}}</td>\r\n            <td>{{user.secondName}}</td>\r\n            <td>{{user.username}}</td>\r\n            <td style=\"white-space: nowrap\">\r\n                <a routerLink=\"edit/{{user._id}}\" class=\"btn btn-sm btn-primary mr-1\">Modifica</a>\r\n                <button (click)=\"deleteUser(user._id)\" class=\"btn btn-sm btn-danger btn-delete-user\" >\r\n                    <span *ngIf=\"user.isDeleting\" class=\"spinner-border spinner-border-sm\"></span>\r\n                    <span *ngIf=\"!user.isDeleting\">Elimina</span>\r\n                </button>\r\n            </td>\r\n        </tr>-->\r\n        <tr *ngIf=\"!user\">\r\n            <td colspan=\"4\" class=\"text-center\">\r\n                <span class=\"spinner-border spinner-border-lg align-center\"></span>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LayoutComponent } from './layout.component';\r\nimport { ListComponent } from './list.component';\r\nimport { AddEditComponent } from './add-edit.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: LayoutComponent,\r\n        children: [\r\n            { path: '', component: ListComponent },\r\n            //{ path: 'add', component: AddEditComponent },\r\n            { path: 'edit/:id', component: AddEditComponent }\r\n        ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class UsersRoutingModule { }","import { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { UsersRoutingModule } from './users-routing.module';\r\nimport { LayoutComponent } from './layout.component';\r\nimport { ListComponent } from './list.component';\r\nimport { AddEditComponent } from './add-edit.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        UsersRoutingModule\r\n    ],\r\n    declarations: [\r\n        LayoutComponent,\r\n        ListComponent,\r\n        AddEditComponent\r\n    ]\r\n})\r\nexport class UsersModule { }"]}