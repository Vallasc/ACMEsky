{"version":3,"sources":["./src/app/users/add-edit.component.ts","./src/app/users/add-edit.component.html","./src/app/users/layout.component.ts","./src/app/users/layout.component.html","./src/app/users/list.component.ts","./src/app/users/list.component.html","./src/app/users/users-routing.module.ts","./src/app/users/users.module.ts"],"names":[],"mappings":"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","file":"users-users-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { AccountService, AlertService } from '../_services';\r\n\r\n@Component({ templateUrl: 'add-edit.component.html' })\r\nexport class AddEditComponent implements OnInit {\r\n    form: FormGroup;\r\n    id: string;\r\n    isAddMode: boolean;\r\n    loading = false;\r\n    submitted = false;\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private accountService: AccountService,\r\n        private alertService: AlertService\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.id = this.route.snapshot.params['id'];\r\n        this.isAddMode = !this.id;\r\n        \r\n        // Vincoli sui field password e username\r\n        const passwordValidators = [Validators.minLength(6)];\r\n\r\n        if (this.isAddMode) {\r\n            passwordValidators.push(Validators.required);\r\n        }\r\n\r\n        this.form = this.formBuilder.group({\r\n            name: ['', Validators.required],\r\n            secondName: ['', Validators.required],\r\n            username: ['',[Validators.required, Validators.minLength(6)]],\r\n            password: ['', passwordValidators]\r\n        });\r\n\r\n        if (!this.isAddMode) {\r\n            this.accountService.getById(this.id)\r\n                .pipe(first())\r\n                .subscribe(x => this.form.patchValue(x));\r\n        }\r\n    }\r\n\r\n    // convenience getter for easy access to form fields\r\n    get f() { return this.form.controls; }\r\n\r\n    onSubmit() {\r\n        this.submitted = true;\r\n\r\n        // reset alerts on submit\r\n        this.alertService.clear();\r\n\r\n        // stop here if form is invalid\r\n        if (this.form.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.loading = true;\r\n        if (this.isAddMode) {\r\n            this.createUser();\r\n        } else {\r\n            this.updateUser();\r\n        }\r\n    }\r\n\r\n    private createUser() {\r\n        this.accountService.createUser(this.form.value)\r\n            .pipe(first())\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alertService.success('Utente aggiunto con successo', { keepAfterRouteChange: true });\r\n                    this.router.navigate(['../'], { relativeTo: this.route });\r\n                },\r\n                error: error => {\r\n                    this.alertService.error(\"Username gi√† esistente\");\r\n                    this.loading = false;\r\n                }\r\n            });\r\n    }\r\n\r\n    private updateUser() {\r\n        this.accountService.update(this.id, this.form.value)\r\n            .pipe(first())\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alertService.success('Utente aggiornato con successo', { keepAfterRouteChange: true });\r\n                    this.router.navigate(['../../'], { relativeTo: this.route });\r\n                },\r\n                error: error => {\r\n                    this.alertService.error(error);\r\n                    this.loading = false;\r\n                }\r\n            });\r\n    }\r\n}","<h1 *ngIf=\"isAddMode\">Aggiungi utente</h1>\r\n<h1 *ngIf=\"!isAddMode\">Modifica utente</h1>\r\n<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"form-row\">\r\n        <div class=\"form-group col\">\r\n            <label for=\"name\">Nome</label>\r\n            <input type=\"text\" formControlName=\"name\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.name.errors }\" />\r\n            <div *ngIf=\"submitted && f.name.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.name.errors.required\">Nome obbligatorio</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group col\">\r\n            <label for=\"secondName\">Cognome</label>\r\n            <input type=\"text\" formControlName=\"secondName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.secondName.errors }\" />\r\n            <div *ngIf=\"submitted && f.secondName.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.secondName.errors.required\">Cognome obbligatorio</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-row\">\r\n        <div class=\"form-group col\">\r\n            <label for=\"username\">Username</label>\r\n            <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\r\n            <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.username.errors.required\">Username obbligatorio</div>\r\n                <div *ngIf=\"f.username.errors.minlength\">L'username deve essere almeno di 6 caratteri</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group col\">\r\n            <label for=\"password\">\r\n                Password\r\n                <em *ngIf=\"!isAddMode\">(Non inserire la password se vuoi lasciare quella precedente)</em>\r\n            </label>\r\n            <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\r\n            <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.password.errors.required\">Password obbligatoria</div>\r\n                <div *ngIf=\"f.password.errors.minlength\">La password deve essere almeno di 6 caratteri</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n            Salva\r\n        </button>\r\n        <a routerLink=\"/users\" class=\"btn btn-link\">Cancella</a>\r\n    </div>\r\n</form>","import { Component } from '@angular/core';\r\n\r\n@Component({ templateUrl: 'layout.component.html' })\r\nexport class LayoutComponent { }","<div class=\"p-4\">\r\n    <div class=\"container\">\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { User } from '@app/_models';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { AccountService } from '../_services';\r\n\r\n@Component({ templateUrl: 'list.component.html' })\r\nexport class ListComponent implements OnInit {\r\n    //users: User[] = [];\r\n    user: User \r\n    constructor(private accountService: AccountService) {}\r\n\r\n    ngOnInit() {\r\n        //this.accountService.getAll().subscribe (user => this.users = user)  \r\n        this.user = this.accountService.userValue;\r\n    }\r\n    /*basicDetails(user) {\r\n  \r\n        const { _id, name, password, secondName, username, token} = user;\r\n        return { _id, name, password, secondName, username, token };\r\n\r\n    }*/\r\n    deleteUser(id: string) {\r\n        \r\n        //const user = this.users.find(x => x._id === id);\r\n        this.accountService.delete(id)\r\n           .pipe(first()).subscribe();\r\n           //.subscribe(() => this.user = this.user.filter(x => x._id !== id));\r\n    }\r\n}","<h1>Utente</h1>\r\n<!--<a routerLink=\"add\" class=\"btn btn-sm btn-success mb-2\">Aggiungi utente</a>-->\r\n<table class=\"table table-striped\">\r\n    <thead>\r\n        <tr>\r\n            <th style=\"width: 30%\">Nome</th>\r\n            <th style=\"width: 30%\">Cognome</th>\r\n            <th style=\"width: 30%\">Username</th>\r\n            <th style=\"width: 10%\"></th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <td>{{user.name}}</td>\r\n        <td>{{user.secondName}}</td>\r\n        <td>{{user.username}}</td>\r\n        <td style=\"white-space: nowrap\">\r\n        <a routerLink=\"edit/{{user._id}}\" class=\"btn btn-sm btn-primary mr-1\">Modifica</a>\r\n        <button (click)=\"deleteUser(user._id)\" class=\"btn btn-sm btn-danger btn-delete-user\">Elimina account</button>\r\n                    <!--<span *ngIf=\"user.isDeleting\" class=\"spinner-border spinner-border-sm\"></span>\r\n                    <span *ngIf=\"!user.isDeleting\">Elimina</span> -->\r\n        </td>\r\n        <!--<tr *ngFor=\"let user of users\">\r\n            <td>{{user.name}}</td>\r\n            <td>{{user.secondName}}</td>\r\n            <td>{{user.username}}</td>\r\n            <td style=\"white-space: nowrap\">\r\n                <a routerLink=\"edit/{{user._id}}\" class=\"btn btn-sm btn-primary mr-1\">Modifica</a>\r\n                <button (click)=\"deleteUser(user._id)\" class=\"btn btn-sm btn-danger btn-delete-user\" >\r\n                    <span *ngIf=\"user.isDeleting\" class=\"spinner-border spinner-border-sm\"></span>\r\n                    <span *ngIf=\"!user.isDeleting\">Elimina</span>\r\n                </button>\r\n            </td>\r\n        </tr>-->\r\n        <tr *ngIf=\"!user\">\r\n            <td colspan=\"4\" class=\"text-center\">\r\n                <span class=\"spinner-border spinner-border-lg align-center\"></span>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LayoutComponent } from './layout.component';\r\nimport { ListComponent } from './list.component';\r\nimport { AddEditComponent } from './add-edit.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: LayoutComponent,\r\n        children: [\r\n            { path: '', component: ListComponent },\r\n            //{ path: 'add', component: AddEditComponent },\r\n            { path: 'edit/:id', component: AddEditComponent }\r\n        ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class UsersRoutingModule { }","import { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { UsersRoutingModule } from './users-routing.module';\r\nimport { LayoutComponent } from './layout.component';\r\nimport { ListComponent } from './list.component';\r\nimport { AddEditComponent } from './add-edit.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        UsersRoutingModule\r\n    ],\r\n    declarations: [\r\n        LayoutComponent,\r\n        ListComponent,\r\n        AddEditComponent\r\n    ]\r\n})\r\nexport class UsersModule { }"],"sourceRoot":"webpack:///"}