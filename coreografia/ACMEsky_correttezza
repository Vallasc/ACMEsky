(( query: ACMEsky -> flyCompany ; response: flyCompany -> ACMEsky)* | (sendLastMinute: flyCompany -> ACMEsky )* ) |

// sequenza query: a-> b; response: b-> a
// sincrono corretto perchè prima riceve poi invia 
// condizioni di sender, receiver e disjoint rispettate
// sequenza corretta pertanto anche iteration è corretta.

// sequenza sendLastMinute: b -> a; 
// sequenza corretta poiché atomica, pertanto anche iteration è corretta.


(
    request: user -> ACMEsky ; 
    // sequenza request: (c -> b ; (..))
    (
        (
            foundOffer: ACMEsky -> Prontogram ; 
            // sequenza foundOffer: (a-> d;(..)) | timeout: (a-> d)
            (
                (confirmOffer: user -> ACMEsky ; askBankLink: ACMEsky -> BankService ; responseLink: BankService -> ACMEsky ; sendBankService: ACMEsky -> user ; payment: user -> BankService ; 
                // sequenza (confirmOffer: c-> a ; askBankLink: a -> e ; responseLink: e -> a ; sendBankService: a -> c ; payment: c -> e ; (..))    
                    (
                        (successPayment: BankService -> ACMEsky;
                        // sequenza (successPayment: e -> a; (..); successOrder: a -> c; stopTimeout: a -> d) + (failPayment: e -> a; failOrder: a -> c )
                            (
                                1 + 
                                (askForDistance: ACMEsky -> GeoDistanceService ; distanceResponse: GeoDistanceService -> ACMEsky; 
                                // sequenza 1 + (askForDistance: a -> f ; distanceResponse: f -> a;(..)) 
                                    (
                                        1 +  (askForRent: ACMEsky -> RentCompany; responseForRent: RentCompany-> ACMEsky )
                                        // sequenza 1 + (askForRent: a -> g; responseForRent: g-> a )
                                    )
                                )
                            )
                        ) ; successOrder: ACMEsky -> user; stopTimeout: ACMEsky -> Prontogram
                    )
                    +
                    (failPayment: BankService -> ACMEsky; failOrder: ACMEsky -> user )
                )
            )
        ) | 
        timeout: ACMEsky -> Prontogram
    )
)*
